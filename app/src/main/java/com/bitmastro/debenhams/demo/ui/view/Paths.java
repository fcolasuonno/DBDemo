package com.bitmastro.debenhams.demo.ui.view;

import android.graphics.Path;

import java.util.ArrayList;

public class Paths {

    public static final int PATH_SIZE = 300;

    public static Path[] FLOWERPATH = createFlowerPath();

    public static Path[] DEBPATH = createDebPath();

    public static Path[] createFlowerPath() {
        ArrayList<Path> path = new ArrayList<Path>();
        {
            Path shape = new Path();
            shape.moveTo(44.479618f, 38.689274f);
            shape.cubicTo(42.40208f, 24.838999f, 30.940489f, 19.38423f, 26.335758f, 17.359848f);
            shape.cubicTo(22.242943f, 15.560521f, 21.349657f, 12.235247f, 21.349657f, 12.235247f);
            shape.cubicTo(21.349657f, 12.235247f, 20.24163f, 15.974819f, 20.24163f, 17.775352f);
            shape.cubicTo(20.24163f, 19.575895f, 19.826126f, 28.024563f, 23.150192f, 35.088203f);
            shape.cubicTo(26.47426f, 42.15184f, 36.584953f, 44.644882f, 39.493515f, 48.107452f);
            shape.cubicTo(42.402073f, 51.570034f, 41.294052f, 57.664146f, 41.294052f, 57.664146f);
            shape.cubicTo(41.294052f, 57.664146f, 41.155552f, 52.81655f, 37.831482f, 49.908f);
            shape.cubicTo(34.507416f, 46.99944f, 26.335758f, 46.99944f, 21.765163f, 38.689274f);
            shape.cubicTo(17.194574f, 30.379105f, 16.806208f, 14.876776f, 20.795645f, 9.049681f);
            shape.cubicTo(22.751728f, 6.192564f, 20.94793f, 10.558609f, 23.981209f, 13.343266f);
            shape.cubicTo(26.795786f, 15.927147f, 35.316483f, 18.4912f, 40.324535f, 23.59247f);
            shape.cubicTo(46.035343f, 29.409586f, 44.61812f, 38.966274f, 44.479618f, 38.689274f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();
            shape.moveTo(38.118526f, 44.347282f);
            shape.cubicTo(39.314213f, 38.851543f, 39.27796f, 36.35491f, 35.954487f, 32.891773f);
            shape.cubicTo(32.563896f, 29.3587f, 29.258669f, 30.537931f, 25.49514f, 24.284367f);
            shape.cubicTo(27.452795f, 31.88271f, 32.309338f, 31.307364f, 35.016357f, 35.48707f);
            shape.cubicTo(37.66156f, 39.57134f, 37.847424f, 44.19755f, 38.118526f, 44.347282f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();
            shape.moveTo(48.75341f, 38.115967f);
            shape.cubicTo(54.1107f, 36.40359f, 56.254723f, 35.123894f, 57.592148f, 30.514109f);
            shape.cubicTo(58.956585f, 25.81123f, 56.282726f, 23.538433f, 59.816715f, 17.152336f);
            shape.cubicTo(54.21518f, 22.646887f, 57.141716f, 26.565105f, 54.87549f, 30.99931f);
            shape.cubicTo(52.66102f, 35.332253f, 48.747536f, 37.806324f, 48.75341f, 38.115967f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();

            shape.moveTo(59.754562f, 43.873833f);
            shape.cubicTo(63.916164f, 47.657196f, 66.096436f, 48.874126f, 70.75733f, 47.727478f);
            shape.cubicTo(75.51237f, 46.557682f, 76.14373f, 43.105656f, 83.44125f, 42.973114f);
            shape.cubicTo(75.882065f, 40.869324f, 73.95205f, 45.362892f, 68.97881f, 45.61738f);
            shape.cubicTo(64.11913f, 45.86606f, 60.019783f, 43.713924f, 59.754562f, 43.873833f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();
            shape.moveTo(60.521122f, 57.172207f);
            shape.cubicTo(59.325436f, 62.667946f, 59.36168f, 65.16457f, 62.685154f, 68.62771f);
            shape.cubicTo(66.07575f, 72.16079f, 69.38098f, 70.98155f, 73.14451f, 77.23513f);
            shape.cubicTo(71.18686f, 69.63678f, 66.33031f, 70.21213f, 63.62329f, 66.03242f);
            shape.cubicTo(60.97808f, 61.94815f, 60.792217f, 57.321938f, 60.521122f, 57.172207f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();
            shape.moveTo(50.717255f, 63.542023f);
            shape.cubicTo(45.359962f, 65.2544f, 43.215942f, 66.534096f, 41.878513f, 71.14389f);
            shape.cubicTo(40.514076f, 75.84677f, 43.187935f, 78.11956f, 39.653954f, 84.505646f);
            shape.cubicTo(45.25548f, 79.0111f, 42.328953f, 75.09288f, 44.595177f, 70.65869f);
            shape.cubicTo(46.80965f, 66.32574f, 50.72313f, 63.85167f, 50.717255f, 63.542023f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();
            shape.moveTo(40.68562f, 57.784172f);
            shape.cubicTo(36.524017f, 54.00081f, 34.34375f, 52.78388f, 29.682848f, 53.930527f);
            shape.cubicTo(24.927813f, 55.100338f, 24.296444f, 58.55235f, 16.99893f, 58.68489f);
            shape.cubicTo(24.558119f, 60.78868f, 26.48813f, 56.295113f, 31.461367f, 56.040627f);
            shape.cubicTo(36.321053f, 55.791946f, 40.4204f, 57.94408f, 40.68562f, 57.784172f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();

            shape.moveTo(57.36686f, 39.956535f);
            shape.cubicTo(68.32278f, 31.232191f, 67.31595f, 18.578787f, 66.766754f, 13.578775f);
            shape.cubicTo(66.27861f, 9.134636f, 68.71174f, 6.6983886f, 68.71174f, 6.6983886f);
            shape.cubicTo(68.71174f, 6.6983886f, 64.91916f, 7.6085997f, 63.359848f, 8.508867f);
            shape.cubicTo(61.800545f, 9.409135f, 54.276024f, 13.273632f, 49.820766f, 19.684175f);
            shape.cubicTo(45.36551f, 26.094719f, 48.261818f, 36.097366f, 46.71742f, 40.347546f);
            shape.cubicTo(45.173027f, 44.59771f, 39.34135f, 46.6852f, 39.34135f, 46.6852f);
            shape.cubicTo(39.34135f, 46.6852f, 43.47024f, 44.14145f, 44.327095f, 39.808445f);
            shape.cubicTo(45.18395f, 35.47544f, 41.098118f, 28.398575f, 46.009636f, 20.285242f);
            shape.cubicTo(50.921154f, 12.17191f, 64.15239f, 4.0844135f, 71.19351f, 4.625819f);
            shape.cubicTo(74.64589f, 4.89128f, 69.96289f, 5.5121684f, 69.06794f, 9.531389f);
            shape.cubicTo(68.23752f, 13.260829f, 70.277336f, 21.921997f, 68.36353f, 28.809729f);
            shape.cubicTo(66.18117f, 36.663998f, 57.196217f, 40.214993f, 57.36686f, 39.956535f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();
            shape.moveTo(62.894028f, 51.33596f);
            shape.cubicTo(75.92749f, 56.461895f, 86.38225f, 49.263256f, 90.437775f, 46.287636f);
            shape.cubicTo(94.04245f, 43.642822f, 97.368866f, 44.53184f, 97.368866f, 44.53184f);
            shape.cubicTo(97.368866f, 44.53184f, 94.68432f, 41.702484f, 93.125f, 40.802223f);
            shape.cubicTo(91.56569f, 39.901947f, 84.45669f, 35.317776f, 76.67737f, 34.66468f);
            shape.cubicTo(68.89803f, 34.011585f, 61.683643f, 41.521183f, 57.230686f, 42.30878f);
            shape.cubicTo(52.77774f, 43.09639f, 48.054085f, 39.089752f, 48.054085f, 39.089752f);
            shape.cubicTo(48.054085f, 39.089752f, 52.32148f, 41.3936f, 56.5024f, 39.96916f);
            shape.cubicTo(60.68331f, 38.5447f, 64.76914f, 31.467834f, 74.25125f, 31.66467f);
            shape.cubicTo(83.73337f, 31.861506f, 97.35297f, 39.27634f, 100.40465f, 45.644836f);
            shape.cubicTo(101.90095f, 48.76741f, 99.021736f, 45.022266f, 95.09352f, 46.256817f);
            shape.cubicTo(91.44852f, 47.402374f, 84.967636f, 53.499496f, 78.045784f, 55.285957f);
            shape.cubicTo(70.15261f, 57.323105f, 62.584885f, 51.317406f, 62.894028f, 51.33596f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();

            shape.moveTo(55.03486f, 61.47735f);
            shape.cubicTo(57.112396f, 75.32762f, 68.57398f, 80.782394f, 73.17872f, 82.80678f);
            shape.cubicTo(77.27154f, 84.60611f, 78.16482f, 87.93138f, 78.16482f, 87.93138f);
            shape.cubicTo(78.16482f, 87.93138f, 79.27284f, 84.191795f, 79.27284f, 82.39126f);
            shape.cubicTo(79.27284f, 80.59073f, 79.68835f, 72.14206f, 76.36428f, 65.078415f);
            shape.cubicTo(73.040215f, 58.01478f, 62.92952f, 55.521736f, 60.020958f, 52.05917f);
            shape.cubicTo(57.1124f, 48.5966f, 58.22042f, 42.502472f, 58.22042f, 42.502472f);
            shape.cubicTo(58.22042f, 42.502472f, 58.358925f, 47.35007f, 61.68299f, 50.258633f);
            shape.cubicTo(65.00706f, 53.167183f, 73.17872f, 53.167183f, 77.74931f, 61.47735f);
            shape.cubicTo(82.31989f, 69.78751f, 82.708275f, 85.28985f, 78.71883f, 91.11694f);
            shape.cubicTo(76.76275f, 93.97405f, 78.56654f, 89.60801f, 75.53327f, 86.82336f);
            shape.cubicTo(72.71869f, 84.23946f, 64.19798f, 81.67543f, 59.18994f, 76.57415f);
            shape.cubicTo(53.47913f, 70.75703f, 54.896355f, 61.200344f, 55.03486f, 61.47735f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();
            shape.moveTo(42.486355f, 60.043465f);
            shape.cubicTo(31.530437f, 68.76781f, 32.537266f, 81.42121f, 33.08646f, 86.42123f);
            shape.cubicTo(33.574604f, 90.865364f, 31.14148f, 93.30162f, 31.14148f, 93.30162f);
            shape.cubicTo(31.14148f, 93.30162f, 34.934055f, 92.3914f, 36.493366f, 91.491135f);
            shape.cubicTo(38.052677f, 90.59087f, 45.57719f, 86.72637f, 50.03244f, 80.315834f);
            shape.cubicTo(54.487705f, 73.90527f, 51.591396f, 63.90263f, 53.135796f, 59.652454f);
            shape.cubicTo(54.680183f, 55.40229f, 60.511864f, 53.3148f, 60.511864f, 53.3148f);
            shape.cubicTo(60.511864f, 53.3148f, 56.382973f, 55.85855f, 55.52612f, 60.191555f);
            shape.cubicTo(54.669266f, 64.52456f, 58.755096f, 71.601425f, 53.84358f, 79.71476f);
            shape.cubicTo(48.93206f, 87.82809f, 35.70083f, 95.91559f, 28.659702f, 95.374176f);
            shape.cubicTo(25.207327f, 95.10872f, 29.890326f, 94.48784f, 30.785275f, 90.46862f);
            shape.cubicTo(31.615694f, 86.739174f, 29.575876f, 78.077995f, 31.489681f, 71.19027f);
            shape.cubicTo(33.67205f, 63.336002f, 42.656994f, 59.78502f, 42.486355f, 60.043465f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();
            shape.moveTo(37.105976f, 48.81171f);
            shape.cubicTo(24.07251f, 43.68578f, 13.617756f, 50.88443f, 9.562222f, 53.86004f);
            shape.cubicTo(5.9575496f, 56.504864f, 2.6311383f, 55.61583f, 2.6311383f, 55.61583f);
            shape.cubicTo(2.6311383f, 55.61583f, 5.315689f, 58.44519f, 6.8750014f, 59.345467f);
            shape.cubicTo(8.434311f, 60.245728f, 15.543316f, 64.829895f, 23.322641f, 65.482994f);
            shape.cubicTo(31.101967f, 66.136086f, 38.31636f, 58.626488f, 42.769314f, 57.838894f);
            shape.cubicTo(47.222263f, 57.051285f, 51.945915f, 61.057922f, 51.945915f, 61.057922f);
            shape.cubicTo(51.945915f, 61.057922f, 47.678524f, 58.754074f, 43.497604f, 60.178528f);
            shape.cubicTo(39.316685f, 61.602974f, 35.230858f, 68.67984f, 25.74875f, 68.483f);
            shape.cubicTo(16.266638f, 68.28617f, 2.6470375f, 60.871334f, -0.40464783f, 54.502834f);
            shape.cubicTo(-1.9009428f, 51.380264f, 0.97826016f, 55.12541f, 4.906486f, 53.890858f);
            shape.cubicTo(8.55148f, 52.745296f, 15.032366f, 46.64818f, 21.954224f, 44.861713f);
            shape.cubicTo(29.8474f, 42.82457f, 37.41512f, 48.83027f, 37.105976f, 48.81171f);
            shape.close();
            path.add(shape);
        }
        return path.toArray(new Path[path.size()]);
    }

    public static Path[] createDebPath() {
        ArrayList<Path> path = new ArrayList<Path>();
/*        {
            Path shape = new Path();
            shape.moveTo(0,0);
            shape.lineTo(300,0);
            shape.lineTo(300,300);
            shape.lineTo(0,300);
            shape.close();
            path.add(shape);
        }*/
        {
            Path shape = new Path();
            shape.moveTo(150.9461f, 164.1441f);
            shape.cubicTo(148.65251f, 161.8454f, 146.54643f, 159.3196f, 144.33972f, 156.92126f);
            shape.cubicTo(139.6933f, 151.78566f, 135.11185f, 146.5908f, 130.44261f, 141.47635f);
            shape.cubicTo(130.15791f, 141.04593f, 129.44118f, 140.3565f, 129.58173f, 141.34184f);
            shape.cubicTo(129.5203f, 146.13416f, 129.58891f, 150.92853f, 129.57932f, 155.72162f);
            shape.cubicTo(129.60835f, 157.4731f, 129.53493f, 159.23337f, 129.62898f, 160.97928f);
            shape.cubicTo(129.43903f, 161.74669f, 130.84355f, 163.54776f, 129.60464f, 163.45247f);
            shape.cubicTo(128.56563f, 163.47574f, 127.5197f, 163.51247f, 126.48342f, 163.41383f);
            shape.cubicTo(127.243965f, 161.48671f, 127.320816f, 159.40344f, 127.260666f, 157.36076f);
            shape.cubicTo(127.23498f, 151.41685f, 127.26039f, 145.46971f, 127.20294f, 139.52782f);
            shape.cubicTo(127.27181f, 138.41971f, 126.29236f, 137.13861f, 126.2203f, 136.34616f);
            shape.cubicTo(127.41874f, 136.36882f, 128.63626f, 136.26372f, 129.82289f, 136.36559f);
            shape.cubicTo(130.53404f, 136.8423f, 131.02266f, 137.66855f, 131.65884f, 138.2616f);
            shape.cubicTo(134.40234f, 141.21272f, 136.96385f, 144.32516f, 139.73344f, 147.25285f);
            shape.cubicTo(142.4419f, 150.1708f, 145.08195f, 153.1511f, 147.76974f, 156.08676f);
            shape.cubicTo(148.0037f, 156.336f, 148.67133f, 157.2204f, 148.66753f, 156.38351f);
            shape.cubicTo(148.6627f, 150.73598f, 148.7071f, 145.08688f, 148.67111f, 139.44029f);
            shape.cubicTo(148.67351f, 138.3709f, 148.1807f, 137.25473f, 148.01242f, 136.28484f);
            shape.cubicTo(149.23488f, 136.19377f, 150.51678f, 136.26683f, 151.7626f, 136.22197f);
            shape.cubicTo(151.5453f, 137.24089f, 151.05426f, 138.2708f, 151.09415f, 139.36887f);
            shape.cubicTo(151.0092f, 142.35031f, 151.07892f, 145.33774f, 151.05397f, 148.3215f);
            shape.cubicTo(151.03777f, 153.50488f, 151.07663f, 158.69003f, 151.02588f, 163.87228f);
            shape.cubicTo(151.01341f, 163.94894f, 151.03668f, 164.11777f, 150.946f, 164.14403f);
            shape.lineTo(150.9461f, 164.1441f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();

            shape.moveTo(244.87785f, 163.95737f);
            shape.cubicTo(243.7594f, 161.90924f, 242.86671f, 159.62163f, 241.8463f, 157.47758f);
            shape.cubicTo(239.20013f, 151.73167f, 236.65308f, 145.93343f, 233.9473f, 140.2192f);
            shape.cubicTo(233.43044f, 140.695f, 233.75684f, 141.75511f, 233.5704f, 142.43848f);
            shape.cubicTo(233.15445f, 148.57161f, 232.63338f, 154.69983f, 232.27426f, 160.83539f);
            shape.cubicTo(232.23695f, 161.67711f, 232.47775f, 162.60887f, 232.47044f, 163.3564f);
            shape.cubicTo(231.34799f, 163.47578f, 230.17838f, 163.47003f, 229.04688f, 163.36119f);
            shape.cubicTo(229.35292f, 162.12096f, 229.85353f, 160.92444f, 229.94373f, 159.63046f);
            shape.cubicTo(230.58691f, 152.87389f, 231.13913f, 146.10371f, 231.73285f, 139.34216f);
            shape.cubicTo(231.73524f, 138.37143f, 231.67299f, 137.40005f, 231.47774f, 136.44684f);
            shape.cubicTo(232.78557f, 136.29018f, 234.14186f, 136.23306f, 235.43887f, 136.39836f);
            shape.cubicTo(237.78406f, 141.12505f, 239.8702f, 145.97612f, 242.11642f, 150.75024f);
            shape.cubicTo(243.16368f, 152.94212f, 244.10443f, 155.21144f, 245.20338f, 157.36594f);
            shape.cubicTo(245.65976f, 157.45305f, 245.79419f, 156.43684f, 246.05434f, 156.07932f);
            shape.cubicTo(248.90929f, 149.48781f, 251.72864f, 142.87877f, 254.59941f, 136.2957f);
            shape.cubicTo(255.31076f, 136.07407f, 256.12427f, 136.3137f, 256.86783f, 136.23344f);
            shape.cubicTo(257.38513f, 136.36533f, 258.28793f, 136.03648f, 258.62668f, 136.39174f);
            shape.cubicTo(258.13483f, 138.53288f, 258.45895f, 140.72144f, 258.71545f, 142.86789f);
            shape.cubicTo(259.36563f, 148.76257f, 259.9329f, 154.66988f, 260.63086f, 160.55733f);
            shape.cubicTo(260.74304f, 161.51167f, 261.1857f, 162.40196f, 261.43726f, 163.29315f);
            shape.cubicTo(260.73944f, 163.48877f, 259.86276f, 163.35913f, 259.09982f, 163.42218f);
            shape.cubicTo(258.54324f, 163.31888f, 257.41467f, 163.64598f, 257.21677f, 163.16344f);
            shape.cubicTo(257.33292f, 162.39607f, 257.51416f, 161.64017f, 257.4432f, 160.85298f);
            shape.cubicTo(257.41754f, 158.35252f, 256.9775f, 155.87042f, 256.78632f, 153.37823f);
            shape.cubicTo(256.31168f, 149.05943f, 255.9306f, 144.72656f, 255.40538f, 140.41513f);
            shape.cubicTo(255.11539f, 139.88924f, 254.83235f, 140.91772f, 254.7076f, 141.15323f);
            shape.cubicTo(251.46275f, 148.69772f, 248.28014f, 156.27333f, 244.99423f, 163.79742f);
            shape.cubicTo(244.94084f, 163.8327f, 244.95152f, 163.94682f, 244.87785f, 163.95726f);
            shape.lineTo(244.87785f, 163.95737f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();

            shape.moveTo(277.89984f, 163.6919f);
            shape.cubicTo(275.52612f, 163.62614f, 273.11795f, 163.23659f, 270.90186f, 162.39908f);
            shape.cubicTo(270.5995f, 162.07117f, 270.77448f, 161.52405f, 270.71973f, 161.10066f);
            shape.cubicTo(270.7322f, 160.46039f, 270.6707f, 159.8134f, 270.79498f, 159.18088f);
            shape.cubicTo(272.23557f, 160.22371f, 273.8153f, 161.11441f, 275.57294f, 161.48973f);
            shape.cubicTo(278.00873f, 162.07593f, 280.86118f, 161.91893f, 282.84244f, 160.22849f);
            shape.cubicTo(284.41766f, 158.82881f, 285.00247f, 156.2519f, 283.77823f, 154.44847f);
            shape.cubicTo(282.49866f, 152.5791f, 280.44635f, 151.46739f, 278.6331f, 150.1923f);
            shape.cubicTo(276.1698f, 148.61545f, 273.369f, 147.01833f, 272.2186f, 144.16719f);
            shape.cubicTo(271.51822f, 142.09874f, 271.9932f, 139.58745f, 273.6876f, 138.13141f);
            shape.cubicTo(275.4992f, 136.29974f, 278.20584f, 135.7671f, 280.7f, 135.86757f);
            shape.cubicTo(282.58133f, 135.92432f, 284.44183f, 136.33092f, 286.23172f, 136.899f);
            shape.cubicTo(286.3453f, 137.79128f, 286.3698f, 138.70532f, 286.21643f, 139.59485f);
            shape.cubicTo(285.46777f, 139.41415f, 284.9191f, 138.7877f, 284.1841f, 138.54669f);
            shape.cubicTo(281.75076f, 137.53796f, 278.7052f, 137.27061f, 276.44144f, 138.85342f);
            shape.cubicTo(275.21393f, 139.68427f, 274.5936f, 141.30519f, 275.05612f, 142.72807f);
            shape.cubicTo(275.68634f, 144.90791f, 277.9011f, 145.9371f, 279.60788f, 147.15349f);
            shape.cubicTo(282.2794f, 149.00807f, 285.42975f, 150.60681f, 286.95218f, 153.63754f);
            shape.cubicTo(288.59238f, 156.91109f, 286.7852f, 161.16582f, 283.52124f, 162.62894f);
            shape.cubicTo(281.76523f, 163.42549f, 279.8141f, 163.68738f, 277.89984f, 163.6919f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();

            shape.moveTo(61.376755f, 163.57506f);
            shape.cubicTo(56.346096f, 163.52779f, 51.313427f, 163.5213f, 46.284058f, 163.43967f);
            shape.cubicTo(46.439552f, 162.61633f, 47.009407f, 161.8667f, 47.05424f, 160.98921f);
            shape.cubicTo(47.420532f, 158.89316f, 47.171356f, 156.76047f, 47.23184f, 154.6464f);
            shape.cubicTo(47.21508f, 149.63963f, 47.22932f, 144.62975f, 47.193222f, 139.62492f);
            shape.cubicTo(47.086266f, 138.50316f, 46.744312f, 137.42308f, 46.301502f, 136.39294f);
            shape.cubicTo(46.59023f, 136.14012f, 47.06349f, 136.34627f, 47.426964f, 136.27931f);
            shape.cubicTo(51.902702f, 136.25952f, 56.378082f, 136.31868f, 60.853436f, 136.36882f);
            shape.cubicTo(61.163055f, 136.76237f, 60.94552f, 137.35089f, 61.011158f, 137.82297f);
            shape.cubicTo(60.959156f, 138.18105f, 61.123055f, 138.7393f, 60.911514f, 138.97287f);
            shape.cubicTo(60.223118f, 138.88745f, 59.592846f, 138.51718f, 58.886833f, 138.47841f);
            shape.cubicTo(57.672493f, 138.22772f, 56.42167f, 138.40044f, 55.19012f, 138.34962f);
            shape.cubicTo(53.638836f, 138.34962f, 52.08756f, 138.34962f, 50.53628f, 138.34962f);
            shape.cubicTo(50.161053f, 138.62279f, 50.410168f, 139.15659f, 50.329918f, 139.5529f);
            shape.cubicTo(50.29276f, 142.0685f, 50.33855f, 144.58456f, 50.374798f, 147.09993f);
            shape.cubicTo(51.028957f, 147.44911f, 51.905235f, 147.17288f, 52.637196f, 147.28674f);
            shape.cubicTo(55.33864f, 147.3424f, 58.04211f, 147.27293f, 60.74235f, 147.38632f);
            shape.cubicTo(60.931038f, 147.93588f, 60.790714f, 148.56386f, 60.84924f, 149.14444f);
            shape.cubicTo(61.048985f, 150.29453f, 60.054096f, 149.71815f, 59.375862f, 149.5251f);
            shape.cubicTo(56.418392f, 149.34421f, 53.449852f, 149.32472f, 50.491005f, 149.46727f);
            shape.cubicTo(50.185993f, 149.90141f, 50.415844f, 150.48495f, 50.34706f, 150.98508f);
            shape.cubicTo(50.36545f, 154.4043f, 50.3587f, 157.83022f, 50.401768f, 161.24593f);
            shape.cubicTo(50.752228f, 161.56348f, 51.300266f, 161.33208f, 51.73768f, 161.40543f);
            shape.cubicTo(55.656f, 161.34712f, 59.652233f, 161.90297f, 63.483505f, 160.80403f);
            shape.cubicTo(63.464764f, 161.74779f, 62.924953f, 162.60442f, 62.657547f, 163.49515f);
            shape.cubicTo(62.244728f, 163.6404f, 61.80249f, 163.55225f, 61.376755f, 163.57516f);
            shape.lineTo(61.376755f, 163.57506f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();

            shape.moveTo(114.44803f, 163.51799f);
            shape.cubicTo(109.58115f, 163.48524f, 104.714355f, 163.44086f, 99.84753f, 163.40128f);
            shape.cubicTo(99.59991f, 163.09612f, 100.078186f, 162.7411f, 100.1306f, 162.41685f);
            shape.cubicTo(100.74921f, 160.98209f, 100.80556f, 159.40268f, 100.76389f, 157.8649f);
            shape.cubicTo(100.7632f, 151.68549f, 100.76629f, 145.50302f, 100.72623f, 139.32516f);
            shape.cubicTo(100.604004f, 138.29774f, 100.17379f, 137.3203f, 99.837105f, 136.3747f);
            shape.cubicTo(100.31618f, 136.22609f, 100.94876f, 136.29767f, 101.48891f, 136.26575f);
            shape.cubicTo(105.73708f, 136.29599f, 109.98527f, 136.32419f, 114.23344f, 136.35394f);
            shape.cubicTo(114.65383f, 136.49373f, 114.381325f, 137.05556f, 114.46702f, 137.3871f);
            shape.cubicTo(114.46101f, 137.92107f, 114.52521f, 138.46033f, 114.41506f, 138.9878f);
            shape.cubicTo(111.34998f, 137.90149f, 108.05502f, 138.3944f, 104.87898f, 138.3006f);
            shape.cubicTo(104.5186f, 138.35004f, 103.828835f, 138.10855f, 103.8247f, 138.6681f);
            shape.cubicTo(103.83981f, 141.45435f, 103.82462f, 144.24106f, 103.87124f, 147.02693f);
            shape.cubicTo(104.260666f, 147.41469f, 104.87903f, 147.14629f, 105.366325f, 147.24307f);
            shape.cubicTo(108.31639f, 147.30281f, 111.27224f, 147.2054f, 114.21826f, 147.37827f);
            shape.cubicTo(114.33942f, 148.1878f, 114.3026f, 149.0189f, 114.260124f, 149.833f);
            shape.cubicTo(113.3589f, 149.62236f, 112.468956f, 149.35854f, 111.530914f, 149.39763f);
            shape.cubicTo(109.033875f, 149.27719f, 106.53127f, 149.3032f, 104.0327f, 149.35216f);
            shape.cubicTo(103.69661f, 149.64873f, 103.942116f, 150.1862f, 103.86726f, 150.59097f);
            shape.cubicTo(103.86726f, 154.10931f, 103.86726f, 157.62762f, 103.86726f, 161.14594f);
            shape.cubicTo(104.0071f, 161.52634f, 104.54249f, 161.26746f, 104.8493f, 161.34764f);
            shape.cubicTo(107.59448f, 161.36023f, 110.34092f, 161.50954f, 113.08514f, 161.3925f);
            shape.cubicTo(114.37489f, 161.35016f, 115.649f, 161.15976f, 116.88102f, 160.77719f);
            shape.cubicTo(117.133026f, 161.35498f, 116.53229f, 162.14316f, 116.43868f, 162.77406f);
            shape.cubicTo(116.3038f, 163.12158f, 116.30217f, 163.64227f, 115.79333f, 163.50375f);
            shape.cubicTo(115.346375f, 163.53926f, 114.894104f, 163.51337f, 114.44797f, 163.51804f);
            shape.lineTo(114.44803f, 163.51799f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();

            shape.moveTo(163.82004f, 163.5152f);
            shape.cubicTo(162.90259f, 163.49408f, 161.9747f, 163.53572f, 161.0528f, 163.44273f);
            shape.cubicTo(161.17343f, 162.41344f, 161.64037f, 161.30507f, 161.6419f, 160.20332f);
            shape.cubicTo(161.81891f, 157.6208f, 161.59453f, 155.02722f, 161.7194f, 152.44244f);
            shape.cubicTo(161.68558f, 148.0272f, 161.71701f, 143.6085f, 161.63458f, 139.19557f);
            shape.cubicTo(161.65007f, 138.22496f, 161.06367f, 137.20695f, 161.04059f, 136.32855f);
            shape.cubicTo(162.48158f, 136.34749f, 163.95709f, 136.22572f, 165.37288f, 136.47029f);
            shape.cubicTo(165.08907f, 137.62549f, 164.79945f, 138.8821f, 164.76274f, 140.1106f);
            shape.cubicTo(164.64397f, 142.46413f, 164.81732f, 144.82089f, 164.83821f, 147.17516f);
            shape.cubicTo(165.29611f, 147.41325f, 165.87947f, 147.22337f, 166.38803f, 147.28877f);
            shape.cubicTo(170.66801f, 147.31467f, 174.94803f, 147.33664f, 179.228f, 147.36723f);
            shape.cubicTo(179.65056f, 147.03049f, 179.37195f, 146.38513f, 179.45232f, 145.91356f);
            shape.cubicTo(179.39786f, 142.75204f, 179.70251f, 139.50931f, 178.71971f, 136.44975f);
            shape.cubicTo(179.25381f, 136.13702f, 180.0771f, 136.45935f, 180.7125f, 136.36491f);
            shape.cubicTo(181.47047f, 136.42119f, 182.29347f, 136.32245f, 183.01776f, 136.45816f);
            shape.cubicTo(183.0775f, 137.10835f, 182.70401f, 137.89255f, 182.67506f, 138.59677f);
            shape.cubicTo(182.40237f, 140.55074f, 182.57536f, 142.53044f, 182.5231f, 144.49686f);
            shape.cubicTo(182.5279f, 149.85669f, 182.48698f, 155.21832f, 182.52069f, 160.57703f);
            shape.cubicTo(182.57817f, 161.50359f, 182.79266f, 162.41107f, 183.05424f, 163.29903f);
            shape.cubicTo(182.70781f, 163.58197f, 182.16916f, 163.34964f, 181.74342f, 163.4199f);
            shape.cubicTo(180.73674f, 163.41391f, 179.72815f, 163.42592f, 178.72662f, 163.30486f);
            shape.cubicTo(178.79105f, 162.60785f, 179.30342f, 162.01888f, 179.25394f, 161.28825f);
            shape.cubicTo(179.66093f, 157.39923f, 179.37547f, 153.4873f, 179.41702f, 149.58725f);
            shape.cubicTo(179.07622f, 149.19984f, 178.44954f, 149.46992f, 177.98723f, 149.38487f);
            shape.cubicTo(173.65761f, 149.35956f, 169.32803f, 149.3304f, 164.9984f, 149.30605f);
            shape.cubicTo(164.58894f, 149.46555f, 164.87619f, 150.0623f, 164.78203f, 150.40494f);
            shape.cubicTo(164.75745f, 153.93459f, 164.60559f, 157.47423f, 164.88173f, 160.9972f);
            shape.cubicTo(164.83507f, 161.91971f, 166.14828f, 163.71133f, 164.53093f, 163.50552f);
            shape.cubicTo(164.29404f, 163.50792f, 164.05603f, 163.51393f, 163.8198f, 163.51514f);
            shape.lineTo(163.82004f, 163.5152f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();

            shape.moveTo(21.959051f, 163.5089f);
            shape.cubicTo(19.226883f, 163.52112f, 16.491608f, 163.28322f, 13.760674f, 163.44255f);
            shape.cubicTo(13.3443165f, 163.29343f, 12.78303f, 163.52676f, 12.432526f, 163.2686f);
            shape.cubicTo(12.828453f, 162.24088f, 13.274588f, 161.13457f, 13.37485f, 159.9959f);
            shape.cubicTo(13.5685f, 158.20595f, 13.431933f, 156.39705f, 13.483547f, 154.59903f);
            shape.cubicTo(13.484986f, 149.53485f, 13.522358f, 144.46799f, 13.484674f, 139.40518f);
            shape.cubicTo(13.570623f, 138.3241f, 12.657082f, 137.09113f, 12.825621f, 136.18417f);
            shape.cubicTo(17.337017f, 136.28879f, 21.913652f, 135.94815f, 26.399841f, 136.67805f);
            shape.cubicTo(32.228214f, 138.09178f, 36.90743f, 143.60796f, 36.99691f, 149.66396f);
            shape.cubicTo(37.180935f, 154.40642f, 34.57492f, 159.09882f, 30.476042f, 161.48222f);
            shape.cubicTo(27.942886f, 163.08594f, 24.903887f, 163.53166f, 21.959051f, 163.50888f);
            shape.lineTo(21.959051f, 163.5089f);
            shape.close();

            shape.moveTo(20.645012f, 161.29762f);
            shape.cubicTo(23.39321f, 161.33362f, 26.278212f, 161.09296f, 28.639265f, 159.54807f);
            shape.cubicTo(31.029123f, 158.1075f, 32.817936f, 155.70088f, 33.40592f, 152.9602f);
            shape.cubicTo(34.653168f, 148.30579f, 32.84494f, 142.79115f, 28.627758f, 140.26422f);
            shape.cubicTo(25.241266f, 138.30405f, 21.16005f, 138.15234f, 17.364767f, 138.54353f);
            shape.cubicTo(16.388525f, 138.68427f, 16.968372f, 139.9075f, 16.798826f, 140.55414f);
            shape.cubicTo(16.761742f, 147.3537f, 16.746384f, 154.15335f, 16.72587f, 160.95297f);
            shape.cubicTo(17.22033f, 161.343f, 17.995026f, 161.10553f, 18.590527f, 161.24265f);
            shape.cubicTo(19.274837f, 161.27563f, 19.960728f, 161.30096f, 20.645f, 161.29771f);
            shape.lineTo(20.645012f, 161.29762f);
            shape.close();

            shape.setFillType(Path.FillType.EVEN_ODD);
            path.add(shape);
        }
        {
            Path shape = new Path();
            shape.moveTo(78.00083f, 163.51028f);
            shape.cubicTo(76.2544f, 163.50668f, 74.50767f, 163.52228f, 72.7615f, 163.48628f);
            shape.cubicTo(72.779396f, 162.84654f, 73.359245f, 162.13489f, 73.44536f, 161.41675f);
            shape.cubicTo(73.791306f, 159.86653f, 73.570465f, 158.26213f, 73.65348f, 156.68782f);
            shape.cubicTo(73.68791f, 151.23468f, 73.76615f, 145.78044f, 73.78979f, 140.328f);
            shape.cubicTo(73.79291f, 138.95856f, 73.45952f, 137.61058f, 72.86796f, 136.37802f);
            shape.cubicTo(74.43385f, 136.30052f, 76.030174f, 136.36604f, 77.60564f, 136.2424f);
            shape.cubicTo(80.510704f, 136.13982f, 83.65484f, 136.06068f, 86.16861f, 137.74747f);
            shape.cubicTo(88.303444f, 139.23907f, 89.22903f, 142.1889f, 88.32088f, 144.62852f);
            shape.cubicTo(87.790504f, 146.20674f, 86.62751f, 147.58902f, 85.09927f, 148.27725f);
            shape.cubicTo(85.271904f, 148.7196f, 86.21647f, 148.67998f, 86.607056f, 149.05582f);
            shape.cubicTo(88.60293f, 150.09131f, 90.17025f, 152.0493f, 90.41508f, 154.3199f);
            shape.cubicTo(90.86825f, 157.28658f, 89.45189f, 160.43555f, 86.91059f, 162.04213f);
            shape.cubicTo(84.68296f, 163.52971f, 81.892296f, 163.53886f, 79.30588f, 163.50826f);
            shape.cubicTo(78.87138f, 163.50919f, 78.43283f, 163.50764f, 78.00083f, 163.51065f);
            shape.lineTo(78.00083f, 163.51028f);
            shape.close();

            shape.moveTo(79.55822f, 161.61015f);
            shape.cubicTo(81.342125f, 161.60417f, 83.252815f, 161.35419f, 84.740074f, 160.30246f);
            shape.cubicTo(86.14865f, 159.36429f, 87.07063f, 157.781f, 87.173065f, 156.08653f);
            shape.cubicTo(87.37026f, 154.26183f, 86.72725f, 152.30817f, 85.20203f, 151.19563f);
            shape.cubicTo(83.03802f, 149.56993f, 80.21151f, 149.53264f, 77.623405f, 149.67796f);
            shape.cubicTo(77.12423f, 149.61847f, 76.756f, 149.85109f, 76.90032f, 150.37822f);
            shape.cubicTo(76.8612f, 153.98524f, 76.83067f, 157.59236f, 76.803764f, 161.19945f);
            shape.cubicTo(77.48969f, 161.73792f, 78.70279f, 161.50317f, 79.55822f, 161.61015f);
            shape.close();


            shape.moveTo(79.70423f, 147.68448f);
            shape.cubicTo(81.5582f, 147.72072f, 83.67353f, 147.33574f, 84.81688f, 145.73743f);
            shape.cubicTo(86.118996f, 144.03032f, 86.027794f, 141.34554f, 84.497345f, 139.80672f);
            shape.cubicTo(82.8434f, 138.15042f, 80.33693f, 138.00395f, 78.12635f, 138.15907f);
            shape.cubicTo(77.67271f, 138.20358f, 76.74743f, 138.06992f, 76.90187f, 138.79625f);
            shape.cubicTo(76.915344f, 141.68045f, 76.86726f, 144.56976f, 76.919014f, 147.45074f);
            shape.cubicTo(77.13228f, 147.8773f, 77.98099f, 147.52707f, 78.42696f, 147.67134f);
            shape.cubicTo(78.85212f, 147.70085f, 79.27985f, 147.68863f, 79.70423f, 147.68442f);
            shape.lineTo(79.70423f, 147.68448f);
            shape.close();
            path.add(shape);
        }
        {
            Path shape = new Path();
            shape.moveTo(194.57098f, 163.51051f);
            shape.cubicTo(193.82416f, 163.5009f, 193.07278f, 163.56761f, 192.33224f, 163.44008f);
            shape.cubicTo(192.93272f, 162.34164f, 193.83704f, 161.28413f, 194.3385f, 160.07591f);
            shape.cubicTo(196.46342f, 155.59042f, 198.43994f, 151.03448f, 200.44576f, 146.49448f);
            shape.cubicTo(201.3986f, 144.18793f, 202.52777f, 141.954f, 203.48982f, 139.65472f);
            shape.cubicTo(203.85591f, 138.6255f, 204.09543f, 137.54553f, 204.05652f, 136.44936f);
            shape.cubicTo(205.15775f, 136.38768f, 206.33398f, 136.1901f, 207.39987f, 136.38492f);
            shape.cubicTo(208.12567f, 137.80708f, 208.68954f, 139.3059f, 209.38446f, 140.74486f);
            shape.cubicTo(212.36084f, 147.39658f, 215.28618f, 154.07318f, 218.28882f, 160.71202f);
            shape.cubicTo(218.57979f, 161.58826f, 219.79434f, 162.59866f, 219.76846f, 163.32231f);
            shape.cubicTo(218.21931f, 163.43112f, 216.66162f, 163.44765f, 215.11093f, 163.38159f);
            shape.cubicTo(215.03702f, 162.49458f, 215.15317f, 161.56406f, 214.7844f, 160.71413f);
            shape.cubicTo(213.76514f, 158.21492f, 212.62555f, 155.76587f, 211.52628f, 153.30125f);
            shape.cubicTo(210.92764f, 152.97517f, 210.19308f, 153.23454f, 209.53552f, 153.16232f);
            shape.cubicTo(206.36008f, 153.19531f, 203.18439f, 153.20984f, 200.00903f, 153.25255f);
            shape.cubicTo(199.53674f, 153.82663f, 199.43846f, 154.69307f, 199.04198f, 155.35197f);
            shape.cubicTo(198.19423f, 157.41208f, 197.17192f, 159.4078f, 196.43175f, 161.50761f);
            shape.cubicTo(196.26765f, 162.13823f, 196.25227f, 162.78932f, 196.26529f, 163.43607f);
            shape.cubicTo(195.73416f, 163.5861f, 195.12332f, 163.46753f, 194.57098f, 163.51057f);
            shape.lineTo(194.57098f, 163.51051f);
            shape.close();

            shape.moveTo(205.3656f, 151.23424f);
            shape.cubicTo(207.04669f, 151.23904f, 208.7297f, 151.2123f, 210.40762f, 151.11075f);
            shape.cubicTo(210.4243f, 150.18387f, 209.63391f, 149.24544f, 209.37683f, 148.32149f);
            shape.cubicTo(208.23383f, 145.67719f, 207.02222f, 143.06342f, 205.82672f, 140.44263f);
            shape.cubicTo(205.18556f, 141.09195f, 204.9056f, 142.30995f, 204.40923f, 143.16107f);
            shape.cubicTo(203.26845f, 145.7095f, 202.08444f, 148.24217f, 201.00816f, 150.81758f);
            shape.cubicTo(200.88939f, 151.5216f, 202.05711f, 151.00162f, 202.43408f, 151.19893f);
            shape.cubicTo(203.41109f, 151.2204f, 204.3885f, 151.23012f, 205.3656f, 151.2342f);
            shape.lineTo(205.3656f, 151.23424f);
            shape.close();
            path.add(shape);
        }
        return path.toArray(new Path[path.size()]);
    }
}
